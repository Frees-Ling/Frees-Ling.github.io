# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
            - name: Upload a Build Artifact
  uses: actions/upload-artifact@v4.3.0
  with:
    # Artifact name
    name: # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
    path: 
    # The desired behavior if no files are found using the provided path.
Available Options:
  warn: Output a warning but do not fail the action
  error: Fail the action with an error message
  ignore: Do not output any warnings or errors, the action does not fail

    if-no-files-found: # optional, default is warn
    # Duration after which artifact will expire in days. 0 means using default retention.
Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

    retention-days: # optional
    # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.

    compression-level: # optional, default is 6
    # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.

    overwrite: # optional, default is false
            - name: Build Jekyll (v4) for GitHub Pages
  # You may pin to the exact commit or the version.
  # uses: dunkmann00/jekyll-v4-build-pages@8d18858fd53f02aa0a72f8ccb9e615a928654ed7
  uses: dunkmann00/jekyll-v4-build-pages@v2.1.2
  with:
    # Directory where the source files reside.
    source: # optional, default is ./
    # Output directory of the build. Although it can be nested inside the source, it cannot be the same as the source directory.
    destination: # optional, default is ./_site
    # Publishes posts with a future date. When set to true, the build is made with the --future option which overrides the future option that may be set in a Jekyll configuration file.
    future: # optional
    # The SHA-1 of the git commit for which the build is running. Default to GITHUB_SHA.
    build_revision: # optional, default is ${{ github.sha }}
    # Verbose output
    verbose: # optional, default is true
    # GitHub token
    token: # default is ${{ github.token }}
            - name: jekyll-deploy
  # You may pin to the exact commit or the version.
  # uses: DavidS/jekyll-deploy@4e59472205269cce9739ac284303e74701fd7e9d
  uses: DavidS/jekyll-deploy@1.1.1
  with:
    # Set to "true" to only build, but not deploy. This is useful for PR testing
    build-only: # optional, default is false
            - name: Jekyll Action
  # You may pin to the exact commit or the version.
  # uses: lemonarc/jekyll-action@2d5e5a2316cd9d4b74ad33da527d6d9be5bff8d1
  uses: lemonarc/jekyll-action@1.0.0
            - name: Build Jekyll for GitHub Pages
  uses: actions/jekyll-build-pages@v1.0.9
  with:
    # Directory where the source files reside.
    source: # optional, default is ./
    # Output directory of the build. Although it can be nested inside the source, it cannot be the same as the source directory.
    destination: # optional, default is ./_site
    # Publishes posts with a future date. When set to true, the build is made with the --future option which overrides the future option that may be set in a Jekyll configuration file.
    future: # optional
    # The SHA-1 of the git commit for which the build is running. Default to GITHUB_SHA.
    build_revision: # optional, default is ${{ github.sha }}
    # Verbose output
    verbose: # optional, default is true
    # GitHub token
    token: # default is ${{ github.token }}
            - name: Jekyll Blog Archive
  # You may pin to the exact commit or the version.
  # uses: kannansuresh/jekyll-blog-archive-workflow@da01bda05e6c93f36cbb782d2cabd9c8734c846d
  uses: kannansuresh/jekyll-blog-archive-workflow@v1.0.3
  with:
    # Url to archive data of the blog. To delete archive folders, pass delete_archives.
    archive_url: 
    # Path to the _archives folder of the blog.
    archive_folder_path: # default is _archives
          
          
